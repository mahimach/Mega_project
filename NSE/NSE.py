# -*- coding: utf-8 -*-
"""Untitled14.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OQf4XEMcOQWUhBaJSQlbgDUWj6C7-FAc
"""

import os
import csv

symbols = []
for filename in os.listdir('/content'):
  if filename.endswith('.csv'):
    # Try opening the file with 'latin-1' encoding
    with open(os.path.join('/content', filename), 'r', encoding='latin-1') as f:
      reader = csv.reader(f)
      header = next(reader) # Skip the header row
      symbol_index = None
      for i, col in enumerate(header):
        if col.lower() == 'symbol':
          symbol_index = i
          break
      if symbol_index is not None:
        for row in reader:
          symbols.append(row[symbol_index])

print(symbols)

import httpx
import time
import os
import logging

# Configure logging
logging.basicConfig(level=logging.INFO)

# List of stock symbols to fetch data for
stock_symbols = symbols  # Example stock symbols

# Date range for fetching data
start_date = '27-07-2024'
end_date = '27-08-2024'

# Directory to save CSV files
output_dir = 'nse_stock_data'
os.makedirs(output_dir, exist_ok=True)

# Headers required for the request (excluding cookie header)
headers = {
    'authority': 'www.nseindia.com',
    'method': 'GET',
    'scheme': 'https',
    'accept': '*/*',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9',
    'referer': 'https://www.nseindia.com/get-quotes/equity?symbol=NIITLTD',
    'sec-ch-ua': '"Chromium";v="128", "Not;A=Brand";v="24", "Brave";v="128"',
    'sec-ch-ua-mobile': '?1',
    'sec-ch-ua-platform': '"Android"',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    'sec-gpc': '1',
    'user-agent': 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.0.0 Mobile Safari/537.36',
    'x-requested-with': 'XMLHttpRequest'
}

def fetch_stock_data(client, symbol):
    url = f"https://www.nseindia.com/api/historical/cm/equity"
    params = {
        'symbol': symbol,
        'series': '["AE", "AF", "BE", "BL","EQ","N1","N2","N3","N4","N7","NB","NC","RL"]',
        'from': start_date,
        'to': end_date,
        'csv': 'true'
    }

    try:
        response = client.get(url, headers=headers, params=params)
        response.raise_for_status()  # Raise an HTTPError for bad responses

        # Save CSV data
        filename = os.path.join(output_dir, f"{symbol}_historical_data.csv")
        with open(filename, 'wb') as file:
            file.write(response.content)

        logging.info(f"Data for {symbol} saved successfully.")

    except httpx.RequestError as e:
        logging.error(f"Request error fetching data for {symbol}: {e}")
    except httpx.HTTPStatusError as e:
        logging.error(f"HTTP error fetching data for {symbol}: {e}")
    except Exception as e:
        logging.error(f"Unexpected error fetching data for {symbol}: {e}")

# Initialize the client session with automatic cookie management
client = httpx.Client(follow_redirects=True)

# Example initial request to set cookies (if needed)
initial_response = client.get("https://www.nseindia.com/get-quotes/equity?symbol=NIITLTD", headers=headers)
if initial_response.status_code == 200:
    logging.info("Initial request successful, cookies set.")
else:
    logging.warning("Initial request failed, cookies might not be set properly.")

# Loop through all stock symbols and fetch their historical data
for symbol in stock_symbols:
    fetch_stock_data(client, symbol)
    time.sleep(1)  # To avoid hitting the API rate limit, you may need to add a delay

print("All data fetched successfully.")

client.close()  # Close the final client session

!zip -r /content/nse_stock_data.zip /content/nse_stock_data

from google.colab import files
files.download('/content/nse_stock_data.zip')